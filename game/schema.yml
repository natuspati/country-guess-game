openapi: 3.0.3
info:
  title: Country Guess API
  version: 1.0.0
  description: Description placeholder2
paths:
  /api/v1/game/country/:
    get:
      operationId: game_country_list
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: region
        schema:
          type: string
          enum:
          - AF
          - AM
          - AQ
          - AS
          - EU
          - OC
        description: |-
          * `EU` - Europe
          * `AS` - Asia
          * `AM` - Americas
          * `AF` - Africa
          * `OC` - Oceania
          * `AQ` - Antarctic

          * `EU` - Europe
          * `AS` - Asia
          * `AM` - Americas
          * `AF` - Africa
          * `OC` - Oceania
          * `AQ` - Antarctic
      tags:
      - game
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
    post:
      operationId: game_country_create
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/v1/game/country/{slug}/:
    get:
      operationId: game_country_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - game
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    put:
      operationId: game_country_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    patch:
      operationId: game_country_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    delete:
      operationId: game_country_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - game
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/game/country/today/:
    get:
      operationId: game_country_today_retrieve
      tags:
      - game
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/v1/game/state/:
    get:
      operationId: game_state_retrieve
      tags:
      - game
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameSate'
          description: ''
    post:
      operationId: game_state_create
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameSate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GameSate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GameSate'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameSate'
          description: ''
  /api/v1/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/users/token/:
    post:
      operationId: users_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/users/token/refresh/:
    post:
      operationId: users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/users/token/verify/:
    post:
      operationId: users_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    Country:
      type: object
      properties:
        slug:
          type: string
        name:
          type: string
          maxLength: 200
        capital:
          type: string
          maxLength: 200
        region:
          $ref: '#/components/schemas/RegionEnum'
        population:
          type: integer
          minimum: 0
        flag:
          type: string
          format: uri
        modified_at:
          type: string
          format: date-time
          readOnly: true
        used_at:
          type: string
          format: date
          nullable: true
      required:
      - capital
      - flag
      - modified_at
      - name
      - population
      - region
    GameSate:
      type: object
      properties:
        finished_today:
          type: boolean
        game_state:
          $ref: '#/components/schemas/GameStateEnum'
        number_tries:
          type: integer
          default: 4
      required:
      - finished_today
      - game_state
    GameStateEnum:
      enum:
      - succes
      - fail
      - wait
      type: string
      description: |-
        * `succes` - succes
        * `fail` - fail
        * `wait` - wait
    PaginatedCountryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    PatchedCountry:
      type: object
      properties:
        slug:
          type: string
        name:
          type: string
          maxLength: 200
        capital:
          type: string
          maxLength: 200
        region:
          $ref: '#/components/schemas/RegionEnum'
        population:
          type: integer
          minimum: 0
        flag:
          type: string
          format: uri
        modified_at:
          type: string
          format: date-time
          readOnly: true
        used_at:
          type: string
          format: date
          nullable: true
    RegionEnum:
      enum:
      - EU
      - AS
      - AM
      - AF
      - OC
      - AQ
      type: string
      description: |-
        * `EU` - Europe
        * `AS` - Asia
        * `AM` - Americas
        * `AF` - Africa
        * `OC` - Oceania
        * `AQ` - Antarctic
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
