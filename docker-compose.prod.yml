version: '3.8'

services:
  nginx:
    restart: on-failure
    build: ./nginx
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - web
  web:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - /bin/sh
      - -c
      - |
        python manage.py collectstatic --noinput
        python manage.py migrate --noinput
        python manage.py loaddata static/country_data.json
        python manage.py reset_countries_dates
        gunicorn country_guess.wsgi:application -c /app/country_guess/gunicorn.conf.py
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env.prod
    expose:
      - "5000"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
  db:
    image: postgres:14.7-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod
    healthcheck:
      # update values from .end.prod
      test: [ "CMD", "pg_isready", "-U", "django_admin", "-d", "django_db" ]
      interval: 60s
      timeout: 60s
      retries: 5
  cache:
    image: redis:7-alpine
    restart: always
    command:
      redis-server --maxmemory-policy allkeys-lru --maxmemory 512mb
    expose:
      - 6379
    volumes:
      - redis:/var/lib/redis/data/
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

volumes:
  static_volume:
  media_volume:
  postgres_data:
  redis: